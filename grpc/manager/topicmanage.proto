// protoc --go_out=plugins=grpc:. topicmanage.proto

//required：值不可为空
//optional：可选字段
//singular：符合语法规则的消息包含零个或者一个这样的字段（最多一个）
//repeated：一个字段在合法的消息中可以重复出现一定次数（包括零次）。重复出现的值的次序将被保留。在proto3中，重复出现的值类型字段默认采用压缩编码。你可以在这里找到更多关于压缩编码的东西： Protocol Buffer Encoding。
//默认值： optional PhoneType type = 2 [default = HOME];
//proto3中，省略required,optional,singular，由protoc自动选择。

//strings, 默认值是空字符串（empty string）
//bytes, 默认值是空bytes（empty bytes）
//bool, 默认值是false
//numeric, 默认值是0
//enums, 默认值是第一个枚举值（value必须为0）
//message fields, the field is not set. Its exact value is langauge-dependent. See the generated code guide for details.
//repeated fields，默认值为empty，通常是一个空list

syntax = "proto3";
package topicproto;

service TopicService {
    rpc GetConnectNum(GetConnectNumRequest) returns (GetConnectNumResponse){}
    rpc SubscribeTopic(SubscribeTopicRequest) returns (SubscribeTopicResponse){}
    rpc UnSubscribeTopic(UnSubscribeTopicRequest) returns (UnSubscribeTopicResponse){}
    rpc Publish(PublishRequest) returns (PublishResponse){}
    rpc CheckTopicExist(CheckTopicExistRequest) returns (CheckTopicExistResponse){}
}

message GetConnectNumRequest {
    string Topic = 1;
}

message GetConnectNumResponse {
    int64 Number = 1;
}

message SubscribeTopicRequest {
    repeated string Topic = 1;
    string Ip = 2;
}

message SubscribeTopicResponse {

}

message UnSubscribeTopicRequest {
    repeated string Topic = 1;
    string Ip = 2;
}

message UnSubscribeTopicResponse {

}

message PublishRequest {
    string Topic = 1;
    bytes Data = 2;
    string MessageId = 3;
    string Source = 4;
}

message PublishResponse {
    bool Ok = 1;
}

message CheckTopicExistRequest {
    string Topic = 1;
}

message CheckTopicExistResponse {
    bool Ok = 1;
}